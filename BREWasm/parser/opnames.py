from ..parser.opcodes import *

opnames = [""] * 256

opnames[Unreachable] = "unreachable"
opnames[Nop] = "nop"
opnames[Block] = "block"
opnames[Loop] = "loop"
opnames[If] = "if"
opnames[Else_] = "else"
opnames[End_] = "end"
opnames[Br] = "br"
opnames[BrIf] = "br_if"
opnames[BrTable] = "br_table"
opnames[Return] = "return"
opnames[Call] = "call"
opnames[CallIndirect] = "call_indirect"
opnames[Drop] = "drop"
opnames[Select] = "select"
opnames[LocalGet] = "local.get"
opnames[LocalSet] = "local.set"
opnames[LocalTee] = "local.tee"
opnames[GlobalGet] = "global.get"
opnames[GlobalSet] = "global.set"
opnames[I32Load] = "i32.load"
opnames[I64Load] = "i64.load"
opnames[F32Load] = "f32.load"
opnames[F64Load] = "f64.load"
opnames[I32Load8S] = "i32.load8_s"
opnames[I32Load8U] = "i32.load8_u"
opnames[I32Load16S] = "i32.load16_s"
opnames[I32Load16U] = "i32.load16_u"
opnames[I64Load8S] = "i64.load8_s"
opnames[I64Load8U] = "i64.load8_u"
opnames[I64Load16S] = "i64.load16_s"
opnames[I64Load16U] = "i64.load16_u"
opnames[I64Load32S] = "i64.load32_s"
opnames[I64Load32U] = "i64.load32_u"
opnames[I32Store] = "i32.store"
opnames[I64Store] = "i64.store"
opnames[F32Store] = "f32.store"
opnames[F64Store] = "f64.store"
opnames[I32Store8] = "i32.store8"
opnames[I32Store16] = "i32.store16"
opnames[I64Store8] = "i64.store8"
opnames[I64Store16] = "i64.store16"
opnames[I64Store32] = "i64.store32"
opnames[MemorySize] = "memory.size"
opnames[MemoryGrow] = "memory.grow"
opnames[I32Const] = "i32.const"
opnames[I64Const] = "i64.const"
opnames[F32Const] = "f32.const"
opnames[F64Const] = "f64.const"
opnames[I32Eqz] = "i32.eqz"
opnames[I32Eq] = "i32.eq"
opnames[I32Ne] = "i32.ne"
opnames[I32LtS] = "i32.lt_s"
opnames[I32LtU] = "i32.lt_u"
opnames[I32GtS] = "i32.gt_s"
opnames[I32GtU] = "i32.gt_u"
opnames[I32LeS] = "i32.le_s"
opnames[I32LeU] = "i32.le_u"
opnames[I32GeS] = "i32.ge_s"
opnames[I32GeU] = "i32.ge_u"
opnames[I64Eqz] = "i64.eqz"
opnames[I64Eq] = "i64.eq"
opnames[I64Ne] = "i64.ne"
opnames[I64LtS] = "i64.lt_s"
opnames[I64LtU] = "i64.lt_u"
opnames[I64GtS] = "i64.gt_s"
opnames[I64GtU] = "i64.gt_u"
opnames[I64LeS] = "i64.le_s"
opnames[I64LeU] = "i64.le_u"
opnames[I64GeS] = "i64.ge_s"
opnames[I64GeU] = "i64.ge_u"
opnames[F32Eq] = "f32.eq"
opnames[F32Ne] = "f32.ne"
opnames[F32Lt] = "f32.lt"
opnames[F32Gt] = "f32.gt"
opnames[F32Le] = "f32.le"
opnames[F32Ge] = "f32.ge"
opnames[F64Eq] = "f64.eq"
opnames[F64Ne] = "f64.ne"
opnames[F64Lt] = "f64.lt"
opnames[F64Gt] = "f64.gt"
opnames[F64Le] = "f64.le"
opnames[F64Ge] = "f64.ge"
opnames[I32Clz] = "i32.clz"
opnames[I32Ctz] = "i32.ctz"
opnames[I32PopCnt] = "i32.popcnt"
opnames[I32Add] = "i32.add"
opnames[I32Sub] = "i32.sub"
opnames[I32Mul] = "i32.mul"
opnames[I32DivS] = "i32.div_s"
opnames[I32DivU] = "i32.div_u"
opnames[I32RemS] = "i32.rem_s"
opnames[I32RemU] = "i32.rem_u"
opnames[I32And] = "i32.and"
opnames[I32Or] = "i32.or"
opnames[I32Xor] = "i32.xor"
opnames[I32Shl] = "i32.shl"
opnames[I32ShrS] = "i32.shr_s"
opnames[I32ShrU] = "i32.shr_u"
opnames[I32Rotl] = "i32.rotl"
opnames[I32Rotr] = "i32.rotr"
opnames[I64Clz] = "i64.clz"
opnames[I64Ctz] = "i64.ctz"
opnames[I64PopCnt] = "i64.popcnt"
opnames[I64Add] = "i64.add"
opnames[I64Sub] = "i64.sub"
opnames[I64Mul] = "i64.mul"
opnames[I64DivS] = "i64.div_s"
opnames[I64DivU] = "i64.div_u"
opnames[I64RemS] = "i64.rem_s"
opnames[I64RemU] = "i64.rem_u"
opnames[I64And] = "i64.and"
opnames[I64Or] = "i64.or"
opnames[I64Xor] = "i64.xor"
opnames[I64Shl] = "i64.shl"
opnames[I64ShrS] = "i64.shr_s"
opnames[I64ShrU] = "i64.shr_u"
opnames[I64Rotl] = "i64.rotl"
opnames[I64Rotr] = "i64.rotr"
opnames[F32Abs] = "f32.abs"
opnames[F32Neg] = "f32.neg"
opnames[F32Ceil] = "f32.ceil"
opnames[F32Floor] = "f32.floor"
opnames[F32Trunc] = "f32.trunc"
opnames[F32Nearest] = "f32.nearest"
opnames[F32Sqrt] = "f32.sqrt"
opnames[F32Add] = "f32.add"
opnames[F32Sub] = "f32.sub"
opnames[F32Mul] = "f32.mul"
opnames[F32Div] = "f32.div"
opnames[F32Min] = "f32.min"
opnames[F32Max] = "f32.max"
opnames[F32CopySign] = "f32.copysign"
opnames[F64Abs] = "f64.abs"
opnames[F64Neg] = "f64.neg"
opnames[F64Ceil] = "f64.ceil"
opnames[F64Floor] = "f64.floor"
opnames[F64Trunc] = "f64.trunc"
opnames[F64Nearest] = "f64.nearest"
opnames[F64Sqrt] = "f64.sqrt"
opnames[F64Add] = "f64.add"
opnames[F64Sub] = "f64.sub"
opnames[F64Mul] = "f64.mul"
opnames[F64Div] = "f64.div"
opnames[F64Min] = "f64.min"
opnames[F64Max] = "f64.max"
opnames[F64CopySign] = "f64.copysign"
opnames[I32WrapI64] = "i32.wrap_i64"
opnames[I32TruncF32S] = "i32.trunc_f32_s"
opnames[I32TruncF32U] = "i32.trunc_f32_u"
opnames[I32TruncF64S] = "i32.trunc_f64_s"
opnames[I32TruncF64U] = "i32.trunc_f64_u"
opnames[I64ExtendI32S] = "i64.extend_i32_s"
opnames[I64ExtendI32U] = "i64.extend_i32_u"
opnames[I64TruncF32S] = "i64.trunc_f32_s"
opnames[I64TruncF32U] = "i64.trunc_f32_u"
opnames[I64TruncF64S] = "i64.trunc_f64_s"
opnames[I64TruncF64U] = "i64.trunc_f64_u"
opnames[F32ConvertI32S] = "f32.convert_i32_s"
opnames[F32ConvertI32U] = "f32.convert_i32_u"
opnames[F32ConvertI64S] = "f32.convert_i64_s"
opnames[F32ConvertI64U] = "f32.convert_i64_u"
opnames[F32DemoteF64] = "f32.demote_f64"
opnames[F64ConvertI32S] = "f64.convert_i32_s"
opnames[F64ConvertI32U] = "f64.convert_i32_u"
opnames[F64ConvertI64S] = "f64.convert_i64_s"
opnames[F64ConvertI64U] = "f64.convert_i64_u"
opnames[F64PromoteF32] = "f64.promote_f32"
opnames[I32ReinterpretF32] = "i32.reinterpret_f32"
opnames[I64ReinterpretF64] = "i64.reinterpret_f64"
opnames[F32ReinterpretI32] = "f32.reinterpret_i32"
opnames[F64ReinterpretI64] = "f64.reinterpret_i64"
opnames[I32Extend8S] = "i32.extend8_s"
opnames[I32Extend16S] = "i32.extend16_s"
opnames[I64Extend8S] = "i64.extend8_s"
opnames[I64Extend16S] = "i64.extend16_s"
opnames[I64Extend32S] = "i64.extend32_s"


opnames[RefNull] = "ref.null"
opnames[RefIsNull] = "ref.is_null "
opnames[RefFunc] = "ref.func"

opnames[I32TruncSatF32S] = "i32.trunc_sat_f32_s"
opnames[I32TruncSatF32U] = "i32.trunc_sat_f32_u"
opnames[I32TruncSatF64S] = "i32.trunc_sat_f64_s"
opnames[I32TruncSatF64U] = "i32.trunc_sat_f64_u"
opnames[I64TruncSatF32S] = "i64.trunc_sat_f32_s"
opnames[I64TruncSatF32U] = "i64.trunc_sat_f32_u"
opnames[I64TruncSatF64S] = "i64.trunc_sat_f64_s"
opnames[I64TruncSatF64U] = "i64.trunc_sat_f64_u"
opnames[MemoryInit] = "memory.init"
opnames[DataDrop] =   "data.drop"
opnames[MemoryCopy] = "memory.copy"
opnames[MemoryFill] = "memory.fill"
opnames[TableInit] =  "table.init"
opnames[ElemDrop] =   "elem.drop"
opnames[TableCopy] =  "table.copy"
opnames[TableGrow] =  "table.grow"
opnames[TableSize] =  "table.size"
opnames[TableFill] =  "table.fill"



opnames[V128Load         ] =  "v128.load memory"
opnames[V128Load8x8S     ] =  "v128.load8x8_s"
opnames[V128Load8x8U     ] =  "v128.load8x8_u"
opnames[V128Load16x4S    ] =  "v128.load16x4_s"
opnames[V128Load16x4U    ] =  "v128.load16x4_u"
opnames[V128Load32x2S    ] =  "v128.load32x2_s"
opnames[V128Load32x2U    ] =  "v128.load32x2_u"
opnames[V128Load8Splat   ] =  "v128.load8_splat"
opnames[V128Load16Splat  ] =  "v128.load16_splat"
opnames[V128Load32Splat  ] =  "v128.load32_splat"
opnames[V128Load64Splat  ] =  "v128.load64_splat"
opnames[V128Store        ] =  "v128.store"
opnames[V128Const        ] =  "v128.const i128"
opnames[I8x16Shuffle     ] =  "i8x16 shuffle"
opnames[I8x16Swizzle     ] =  "i8x16.swizzle"
opnames[I8x16Splat       ] =  "i8x16.splat"
opnames[I16x8Splat       ] =  "i16x8.splat"
opnames[I32x4Splat       ] =  "i32x4.splat"
opnames[I64x2Splat       ] =  "i64x2.splat"
opnames[F32x4Splat       ] =  "f32x4.splat"
opnames[F64x2Splat       ] =  "f64x2.splat"
opnames[I8x16ExtractLaneS] =  "i8x16.extract_lane_s"
opnames[I8x16ExtractLaneU] =  "i8x16.extract_lane_u"
opnames[I8x16ReplaceLane ] =  "i8x16.extract_lane_s"
opnames[I16x8ExtractLaneS] =  "i16x8.extract_lane_s"
opnames[I16x8ExtractLaneU] =  "i16x8.extract_lane_u"
opnames[I16x8ReplaceLane ] =  "i16x8.replace_lane"
opnames[I32x4ExtractLane ] =  "i32x4.extract_lane"
opnames[I32x4ReplaceLane ] =  "I32x4.replace_lane"
opnames[I64x2ExtractLane ] =  "I64x2.extract_lane"
opnames[I64x2ReplaceLane ] =  "I64x2.replace_lane"
opnames[F32x4ExtractLane ] =  "F32x4.extract_lane"
opnames[F32x4ReplaceLane ] =  "F32x4.replace_lane"
opnames[F64x2ExtractLane ] =  "F64x2.extract_lane"
opnames[F64x2ReplaceLane ] =  "F64x2.replace_lane"


opnames[I8x16Eq  ] =  "i8x16.eq"
opnames[I8x16Ne  ] =  "i8x16.ne"
opnames[I8x16LtS ] =  "i8x16.lt_s"
opnames[I8x16LtU ] =  "i8x16.lt_u"
opnames[I8x16GtS ] =  "i8x16.gt_s"
opnames[I8x16GtU ] =  "i8x16.gt_u"
opnames[I8x16LeS ] =  "i8x16.le_s"
opnames[I8x16LeU ] =  "i8x16.le_u"
opnames[I8x16GeS ] =  "i8x16.ge_s"
opnames[I8x16GeU ] =  "i8x16.ge_u"
opnames[I16x8Eq  ] =  "i16x8.eq"
opnames[I16x8Ne  ] =  "i16x8.ne"
opnames[I16x8LtS ] =  "i16x8.lt_s"
opnames[I16x8LtU ] =  "i16x8.lt_u"
opnames[I16x8GtS ] =  "i16x8.gt_s"
opnames[I16x8GtU ] =  "i16x8.gt_u"
opnames[I16x8LeS ] =  "i16x8.le_s"
opnames[I16x8LeU ] =  "i16x8.le_u"
opnames[I16x8GeS ] =  "i16x8.ge_s"
opnames[I16x8GeU ] =  "i16x8.ge_u"


opnames[I32x4Eq ] =  "i32x4.eq"
opnames[I32x4Ne ] =  "i32x4.ne"
opnames[I32x4LtS] =  "i32x4.lt_s"
opnames[I32x4LtU] =  "i32x4.lt_u"
opnames[I32x4GtS] =  "i32x4.gt_s"
opnames[I32x4GtU] =  "i32x4.gt_u"
opnames[I32x4LeS] =  "i32x4.le_s"
opnames[I32x4LeU] =  "i32x4.le_u"
opnames[I32x4GeS] =  "i32x4.ge_s"
opnames[I32x4GeU] =  "i32x4.ge_u"
opnames[F32x4Eq ] =  "f32x4.eq"
opnames[F32x4Ne ] =  "f32x4.ne"
opnames[F32x4Lt ] =  "f32x4.lt"
opnames[F32x4Gt ] =  "f32x4.gt"
opnames[F32x4Le ] =  "f32x4.le"
opnames[F32x4Ge ] =  "f32x4.ge"
opnames[F64x2Eq ] =  "f64x2.eq"
opnames[F64x2Ne ] =  "f64x2.ne"
opnames[F64x2Lt ] =  "f64x2.lt"
opnames[F64x2Gt ] =  "f64x2.gt"
opnames[F64x2Le ] =  "f64x2.le"
opnames[F64x2Ge ] =  "f64x2.ge"


opnames[V128Not             ] =  "v128.not"
opnames[V128And             ] =  "v128.and"
opnames[V128AndNot          ] =  "v128.andnot"
opnames[V128Or              ] =  "v128.or"
opnames[V128Xor             ] =  "v128.xor"
opnames[V128BitSelect       ] =  "v128.bitselect"
opnames[V128AnyTrue         ] =  "v128.any_true"
opnames[V128Load8Lane       ] =  "v128.load8_lane"
opnames[V128Load16Lane      ] =  "v128.load16_lane"
opnames[V128Load32Lane      ] =  "v128.load32_lane"
opnames[V128Load64Lane      ] =  "v128.load64_lane"
opnames[V128Store8Lane      ] =  "v128.store8_lane"
opnames[V128Store16Lane     ] =  "v128.store16_lane"
opnames[V128Store32Lane     ] =  "v128.store32_lane"
opnames[V128Store64Lane     ] =  "v128.store64_lane"
opnames[V128Load32Zero      ] =  "v128.load32_zero"
opnames[V128Load64Zero      ] =  "v128.load64_zero"
opnames[F32x4DemoteF64x2Zero] =  "f32x4.demote_f64x2_zero"
opnames[F64x2PromoteLowF32x4] =  "f64x2.promote_low_f32x4"


opnames[I8x16Abs         ] =  "i8x16.abs"
opnames[I8x16Neg         ] =  "i8x16.neg"
opnames[I8x16Popcnt      ] =  "i8x16.popcnt"
opnames[I8x16AllTrue     ] =  "i8x16.all_true"
opnames[I8x16Bitmask     ] =  "i8x16.bitmask"
opnames[I8x16NarrowI16x8S] =  "i8x16.narrow_i16x8_s"
opnames[I8x16NarrowI16x8U] =  "i8x16.narrow_i16x8_u"
opnames[F32x4Ceil        ] =  "f32x4.ceil"
opnames[F32x4Floor       ] =  "f32x4.floor"
opnames[F32x4Trunc       ] =  "f32x4.trunc"
opnames[F32x4Nearest     ] =  "f32x4.nearest"
opnames[I8x16Shl         ] =  "i8x16.shl"
opnames[I8x16ShrS        ] =  "i8x16.shr_s"
opnames[I8x16ShrU        ] =  "i8x16.shr_u"
opnames[I8x16Add         ] =  "i8x16.add"
opnames[I8x16AddSatS     ] =  "i8x16.add_sat_s"
opnames[I8x16AddSatU     ] =  "i8x16.add_sat_u"
opnames[I8x16Sub         ] =  "i8x16.sub"
opnames[I8x16SubSatS     ] =  "i8x16.sub_sat_s"
opnames[I8x16SubSatU     ] =  "i8x16.sub_sat_u"
opnames[F64x2Ceil        ] =  "f64x2.ceil"
opnames[F64x2Floor       ] =  "f64x2.floor"
opnames[I8x16MinS        ] =  "i8x16.min_s"
opnames[I8x16MinU        ] =  "i8x16.min_u"
opnames[I8x16MaxS        ] =  "i8x16.max_s"
opnames[I8x16MaxU        ] =  "i8x16.max_u"
opnames[F64x2Trunc       ] =  "f64x2.trunc"
opnames[I8x16AvgrU       ] =  "i8x16.avgr_u"


opnames[I16x8ExtaddPairwiseI8x16S] =  "i16x8.extadd_pairwise_i8x16_s"
opnames[I16x8ExtaddPairwiseI8x16U] =  "i16x8.extadd_pairwise_i8x16_u"
opnames[I32x4ExtaddPairwiseI16x8S] =  "i32x4.extadd_pairwise_i16x8_s"
opnames[I32x4ExtaddPairwiseI16x8U] =  "i32x4.extadd_pairwise_i16x8_u"
opnames[I16x8Abs                 ] =  "i16x8.abs"
opnames[I16x8Neg                 ] =  "i16x8.neg"
opnames[I16x8Q15mulrSatS         ] =  "i16x8.q15mulr_sat_s"
opnames[I16x8AllTrue             ] =  "i16x8.all_true"
opnames[I16x8Bitmask             ] =  "i16x8.bitmask"
opnames[I16x8NarrowI32x4S        ] =  "i16x8.narrow_i32x4_s"
opnames[I16x8NarrowI32x4U        ] =  "i16x8.narrow_i32x4_u"
opnames[I16x8ExtendLowI8x16S     ] =  "i16x8.extend_low_i8x16_s"
opnames[I16x8ExtendHighI8x16S    ] =  "i16x8.extend_high_i8x16_s"
opnames[I16x8ExtendLowI8x16U     ] =  "i16x8.extend_low_i8x16_u"
opnames[I16x8ExtendHighI8x16U    ] =  "i16x8.extend_high_i8x16_u"

opnames[I16x8Shl             ] =  "i16x8.shl"
opnames[I16x8ShrS            ] =  "i16x8.shr_s"
opnames[I16x8ShrU            ] =  "i16x8.shr_u"
opnames[I16x8Add             ] =  "i16x8.add"
opnames[I16x8AddSatS         ] =  "i16x8.add_sat_s"
opnames[I16x8AddSatU         ] =  "i16x8.add_sat_u"
opnames[I16x8Sub             ] =  "i16x8.sub"
opnames[I16x8SubSatS         ] =  "i16x8.sub_sat_s"
opnames[I16x8SubSatU         ] =  "i16x8.sub_sat_u"
opnames[F64x2Nearest         ] =  "f64x2.nearest"
opnames[I16x8Mul             ] =  "i16x8.mul"
opnames[I16x8MinS            ] =  "i16x8.min_s"
opnames[I16x8MinU            ] =  "i16x8.min_u"
opnames[I16x8MaxS            ] =  "i16x8.max_s"
opnames[I16x8MaxU            ] =  "i16x8.max_u"
opnames[I16x8AvgrU           ] =  "i16x8.avgr_u"
opnames[I16x8ExtmulLowI8x16S ] =  "i16x8.extmul_low_i8x16_s"
opnames[I16x8ExtmulHighI8x16S] =  "i16x8.extmul_high_i8x16_s"
opnames[I16x8ExtmulLowI8x16U ] =  "i16x8.extmul_low_i8x16_u"
opnames[I16x8ExtmulHighI8x16U] =  "i16x8.extmul_high_i8x16_u"


opnames[I32x4Abs             ] =  "i32x4.abs"
opnames[I32x4Neg             ] =  "i32x4.neg"
opnames[I32x4AllTrue         ] =  "i32x4.all_true"
opnames[I32x4Bitmask         ] =  "i32x4.bitmask"
opnames[I32x4ExtendLowI16x8S ] =  "i32x4.extend_low_i16x8_s"
opnames[I32x4ExtendHighI16x8S] =  "i32x4.extend_high_i16x8_s"
opnames[I32x4ExtendLowI16x8U ] =  "i32x4.extend_low_i16x8_u"
opnames[I32x4ExtendHighI16x8U] =  "i32x4.extend_high_i16x8_u"
opnames[I32x4Shl             ] =  "i32x4.shl"
opnames[I32x4ShrS            ] =  "i32x4.shr_s"
opnames[I32x4ShrU            ] =  "i32x4.shr_u"
opnames[I32x4Add             ] =  "i32x4.add"
opnames[I32x4Sub             ] =  "i32x4.sub"
opnames[I32x4Mul             ] =  "i32x4.mul"
opnames[I32x4MinS            ] =  "i32x4.min_s"
opnames[I32x4MinU            ] =  "i32x4.min_u"
opnames[I32x4MaxS            ] =  "i32x4.max_s"
opnames[I32x4MaxU            ] =  "i32x4.max_u"
opnames[I32x4DotI16x8S       ] =  "i32x4.dot_i16x8_s"
opnames[I32x4ExtmulLowI16x8S ] =  "i32x4.extmul_low_i16x8_s"
opnames[I32x4ExtmulHighI16x8S] =  "i32x4.extmul_high_i16x8_s"
opnames[I32x4ExtmulLowI16x8U ] =  "i32x4.extmul_low_i16x8_u"
opnames[I32x4ExtmulHighI16x8U] =  "i32x4.extmul_high_i16x8_u"

opnames[I64x2Abs              ] =  "I64x2.abs"
opnames[I64x2Neg              ] =  "I64x2.neg"
opnames[I64x2AllTrue          ] =  "I64x2.all_true"
opnames[I64x2Bitmask          ] =  "i64x2.bitmask"
opnames[I64x2ExtendLowI32x4S  ] =  "i64x2.extend_low_i32x4_s"
opnames[I64x2ExtendHighI32x4S ] =  "i64x2.extend_high_i32x4_s"
opnames[I64x2ExtendLowI32x4U  ] =  "i64x2.extend_low_i32x4_u"
opnames[I64x2ExtendHighI32x4U ] =  "i64x2.extend_high_i32x4_u"
opnames[I64x2Shl              ] =  "i64x2.shl"
opnames[I64x2ShrS             ] =  "i64x2.shr_s"
opnames[I64x2ShrU             ] =  "i64x2.shr_u"
opnames[I64x2Add              ] =  "i64x2.add"
opnames[I64x2Sub              ] =  "i64x2.sub"
opnames[I64x2Mul              ] =  "i64x2.mul"
opnames[I64x2Eq               ] =  "i64x2.eq"
opnames[I64x2Ne               ] =  "i64x2.ne"
opnames[I64x2LtS              ] =  "i64x2.lt_s"
opnames[I64x2GtS              ] =  "i64x2.gt_s"
opnames[I64x2LeS              ] =  "i64x2.le_s"
opnames[I64x2GeS              ] =  "i64x2.ge_s"
opnames[I64x2ExtmulLowI32x4S  ] =  "i64x2.extmul_low_i32x4_s"
opnames[I64x2ExtmulHighI32x4S ] =  "i64x2.extmul_high_i32x4_s"
opnames[I64x2ExtmulLowI32x4U  ] =  "i64x2.extmul_low_i32x4_u"
opnames[I64x2ExtmulHighI32x4U ] =  "i64x2.extmul_high_i32x4_u"

opnames[F32x4Abs ] =  "f32x4.abs"
opnames[F32x4Neg ] =  "f32x4.neg"
opnames[F32x4Sqrt] =  "f32x4.sqrt"
opnames[F32x4Add ] =  "f32x4.add"
opnames[F32x4Sub ] =  "f32x4.sub"
opnames[F32x4Mul ] =  "f32x4.mul"
opnames[F32x4Div ] =  "f32x4.div"
opnames[F32x4Min ] =  "f32x4.min"
opnames[F32x4Max ] =  "f32x4.max"
opnames[F32x4Pmin] =  "f32x4.pmin"
opnames[F32x4Pmax] =  "f32x4.pmax"
opnames[F64x2Abs ] =  "f64x2.abs"
opnames[F64x2Neg ] =  "f64x2.neg"
opnames[F64x2Sqrt] =  "f64x2.sqrt"
opnames[F64x2Add ] =  "f64x2.add"
opnames[F64x2Sub ] =  "f64x2.sub"
opnames[F64x2Mul ] =  "f64x2.mul"
opnames[F64x2Div ] =  "f64x2.div"
opnames[F64x2Min ] =  "f64x2.min"
opnames[F64x2Max ] =  "f64x2.max"
opnames[F64x2Pmin] =  "f64x2.pmin"
opnames[F64x2Pmax] =  "f64x2.pmax"

opnames[I32x4TruncSatF32x4S    ] =  "i32x4.trunc_sat_f32x4_s"
opnames[I32x4TruncSatF32x4U    ] =  "i32x4.trunc_sat_f32x4_u"
opnames[F32x4ConvertI32x4S  ] =  "f32x4.convert_i32x4_s"
opnames[F32x4ConvertI32x4U  ] =  "f32x4.convert_i32x4_u"
opnames[I32x4TruncSatF64x2SZero] =  "i32x4.trunc_sat_f64x2_s_zero"
opnames[I32x4TruncSatF64x2UZero] =  "i32x4.trunc_sat_f64x2_u_zero"
opnames[F64x2ConvertLowI32x4S  ] =  "f64x2.convert_low_i32x4_s"
opnames[F64x2ConvertLowI32x4U  ] =  "f64x2.convert_low_i32x4_u"
